name: Build and Release Ghostty

on:
  schedule:
    - cron: "0 */6 * * *"   # check every 6 hours
  workflow_dispatch:
    inputs:
      tag:
        description: "Specific upstream tag to build (e.g., v1.2.3). Leave empty for latest."
        required: false
        default: ""
        type: string

permissions:
  contents: write

env:
  ZIG_24_04: "0.14.1"    # Zig used for native 24.04 build
  ZIG_FLATPAK: "0.14.1"  # Zig injected into Flatpak SDK on 22.04
  GNOME_RUNTIME: "46"    # Flatpak runtime branch (has libadwaita >= 1.5)

jobs:
  check-tags:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.compute.outputs.tag }}
      version: ${{ steps.compute.outputs.version }}
      should_build: ${{ steps.decide.outputs.should_build }}
    steps:
      - name: Compute tag and version
        id: compute
        shell: bash
        run: |
          set -euo pipefail
          TAGS=$(curl -fsSL 'https://api.github.com/repos/ghostty-org/ghostty/tags?per_page=200' \
            | grep '"name":' | grep -o '"v[0-9][^"]*"' | tr -d '"' | sort -V)
          if [[ -n "${{ github.event.inputs.tag }}" ]]; then
            if echo "$TAGS" | grep -qx "${{ github.event.inputs.tag }}"; then
              TAG="${{ github.event.inputs.tag }}"
            else
              echo "Requested tag not found. Available:" >&2
              echo "$TAGS" >&2
              exit 1
            fi
          else
            TAG=$(echo "$TAGS" | tail -n1)
          fi
          VER="${TAG#v}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "version=$VER" >> "$GITHUB_OUTPUT"
          echo "Selected tag: $TAG"
          echo "Version: $VER"

      - name: Decide build (skip if release already exists unless manual)
        id: decide
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          TAG='${{ steps.compute.outputs.tag }}'
          if [[ -n "${{ github.event.inputs.tag }}" ]]; then
            echo "should_build=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          code=$(curl -s -o /dev/null -w '%{http_code}' \
            -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/${TAG}")
          if [[ "$code" == "200" ]]; then
            echo "should_build=false" >> "$GITHUB_OUTPUT"
          else
            echo "should_build=true" >> "$GITHUB_OUTPUT"
          fi

  build-ubuntu-24-04:
    name: Build .deb on Ubuntu 24.04 (same upstream tag)
    needs: check-tags
    if: needs.check-tags.outputs.should_build == 'true'
    runs-on: ubuntu-24.04
    env:
      TAG: ${{ needs.check-tags.outputs.tag }}
      VERSION: ${{ needs.check-tags.outputs.version }}
    steps:
      - name: Tooling and headers
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl wget xz-utils pkg-config gettext libxml2-utils git dpkg-dev debhelper \
            libgtk-4-dev libadwaita-1-dev

      - name: Fetch Ghostty source (official tarball)
        run: |
          curl -fL "https://release.files.ghostty.org/${VERSION}/ghostty-${VERSION}.tar.gz" -o "ghostty-${VERSION}.tar.gz"
          tar -xf "ghostty-${VERSION}.tar.gz"
          mv "ghostty-${VERSION}" ghostty

      - name: Download Zig ${{ env.ZIG_24_04 }}
        run: |
          F="zig-x86_64-linux-${{ env.ZIG_24_04 }}.tar.xz"
          curl -fL "https://ziglang.org/download/${{ env.ZIG_24_04 }}/${F}" -o "$F"
          tar -xf "$F"
          mv "zig-x86_64-linux-${{ env.ZIG_24_04 }}" zig
          ./zig/zig version

      - name: Build + stage install
        run: |
          cd ghostty
          ../zig/zig build -Doptimize=ReleaseFast -fno-sys=gtk4-layer-shell
          ../zig/zig build -Doptimize=ReleaseFast -fno-sys=gtk4-layer-shell install -p ../install-root
          cd ..
          find install-root -maxdepth 3 -type f -print

      - name: Package .deb (24.04)
        run: |
          mkdir -p debian-package/DEBIAN debian-package/usr/bin debian-package/usr/share
          cp -r install-root/bin/* debian-package/usr/bin/
          cp -r install-root/share/* debian-package/usr/share/ || true
          chmod 755 debian-package/usr/bin/ghostty || true
          test -f debian-package/usr/share/applications/com.mitchellh.ghostty.desktop && chmod 644 debian-package/usr/share/applications/com.mitchellh.ghostty.desktop || true
          cat > debian-package/DEBIAN/control <<EOF
          Package: ghostty
          Version: ${VERSION}
          Section: utils
          Priority: optional
          Architecture: amd64
          Depends: libgtk-4-1, libadwaita-1-0, libxml2
          Maintainer: Mohamed Elashri <mail@elashri.com>
          Description: Modern Terminal Emulator
           Ghostty is a fast, feature-rich, and cross-platform terminal emulator
           that uses platform-native UI and GPU acceleration.
          EOF
          dpkg-deb --build debian-package
          mv debian-package.deb "ghostty_${VERSION}_ubuntu24.04_amd64.deb"

      - name: Portable tarball (24.04)
        run: |
          mkdir -p release
          cp ghostty/zig-out/bin/ghostty release/
          tar czf "ghostty-linux-x86_64-ubuntu24.04.tar.gz" -C release .

      - name: Upload artifacts (24.04)
        uses: actions/upload-artifact@v4
        with:
          name: ghostty-ubuntu-24.04
          path: |
            ghostty_${{ env.VERSION }}_ubuntu24.04_amd64.deb
            ghostty-linux-x86_64-ubuntu24.04.tar.gz

  build-ubuntu-22-04-flatpak:
    name: Build Flatpak on Ubuntu 22.04 (same upstream tag)
    needs: check-tags
    if: needs.check-tags.outputs.should_build == 'true'
    runs-on: ubuntu-22.04
    env:
      TAG: ${{ needs.check-tags.outputs.tag }}
      VERSION: ${{ needs.check-tags.outputs.version }}
    steps:
      - name: Install Flatpak tooling
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak flatpak-builder bubblewrap xz-utils curl jq ca-certificates

      - name: Enable Flathub (user installation)
        run: |
          flatpak --version
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak remotes --user

      - name: Install GNOME runtime + SDK (user)
        run: |
          # pre-install ensures builder does not try "master"
          flatpak --user install -y flathub org.gnome.Platform//${{ env.GNOME_RUNTIME }}
          flatpak --user install -y flathub org.gnome.Sdk//${{ env.GNOME_RUNTIME }}
          flatpak list --user

      - name: Pre-fetch sources (Zig, gtk4-layer-shell, Ghostty tarball)
        run: |
          set -euo pipefail
          ZIG_FILE="zig-x86_64-linux-${{ env.ZIG_FLATPAK }}.tar.xz"
          curl -fL "https://ziglang.org/download/${{ env.ZIG_FLATPAK }}/${ZIG_FILE}" -o "${ZIG_FILE}"
          LAYERSHELL_VER="1.2.0"
          LAYER_TAR="gtk4-layer-shell-${LAYERSHELL_VER}.tar.gz"
          curl -fL "https://github.com/wmww/gtk4-layer-shell/archive/refs/tags/v${LAYERSHELL_VER}.tar.gz" -o "${LAYER_TAR}"
          GHOST_TAR="ghostty-${VERSION}.tar.gz"
          curl -fL "https://release.files.ghostty.org/${VERSION}/${GHOST_TAR}" -o "${GHOST_TAR}"
          ls -lh *.tar* || true

      - name: Generate Flatpak manifest
        run: |
          cat > org.ghostty.Ghostty.yml <<'YAML'
          id: org.ghostty.Ghostty
          runtime: org.gnome.Platform
          runtime-version: "GNOME_RUNTIME_REPLACE"
          sdk: org.gnome.Sdk
          command: ghostty
          finish-args:
            - --share=ipc
            - --socket=wayland
            - --socket=fallback-x11
            - --device=dri
            - --filesystem=home
            - --env=TERM=xterm-256color
          modules:
            - name: zig
              buildsystem: simple
              build-commands:
                - mkdir -p /app/zig
                - tar -xf zig-x86_64-linux-ZIG_VERSION_REPLACE.tar.xz
                - cp -r zig-*-linux-ZIG_VERSION_REPLACE/zig /app/zig/
                - cp -r zig-*-linux-ZIG_VERSION_REPLACE/lib /app/zig/
                - /app/zig/zig version
              sources:
                - type: file
                  path: zig-x86_64-linux-ZIG_VERSION_REPLACE.tar.xz

            - name: gtk4-layer-shell
              buildsystem: simple
              build-commands:
                - tar -xf gtk4-layer-shell-LAYER_VER_REPLACE.tar.gz
                - cd gtk4-layer-shell-LAYER_VER_REPLACE && meson setup _build --prefix=/app
                - cd gtk4-layer-shell-LAYER_VER_REPLACE && ninja -C _build
                - cd gtk4-layer-shell-LAYER_VER_REPLACE && ninja -C _build install
              sources:
                - type: file
                  path: gtk4-layer-shell-LAYER_VER_REPLACE.tar.gz

            - name: ghostty
              buildsystem: simple
              build-commands:
                - tar -xf ghostty-VERSION_REPLACE.tar.gz
                - cd ghostty-VERSION_REPLACE
                - /app/zig/zig build -Doptimize=ReleaseFast
                - /app/zig/zig build -Doptimize=ReleaseFast install -p "${FLATPAK_DEST}"
              sources:
                - type: file
                  path: ghostty-VERSION_REPLACE.tar.gz
          YAML
          sed -i "s/GNOME_RUNTIME_REPLACE/${{ env.GNOME_RUNTIME }}/" org.ghostty.Ghostty.yml
          sed -i "s/ZIG_VERSION_REPLACE/${{ env.ZIG_FLATPAK }}/g" org.ghostty.Ghostty.yml
          sed -i "s/LAYER_VER_REPLACE/1.2.0/g" org.ghostty.Ghostty.yml
          sed -i "s/VERSION_REPLACE/${{ env.VERSION }}/g" org.ghostty.Ghostty.yml
          echo "----- org.ghostty.Ghostty.yml -----"
          sed -n '1,200p' org.ghostty.Ghostty.yml

      - name: Build Flatpak (user; install deps from Flathub)
        run: |
          rm -rf build-dir repo
          flatpak-builder --user --force-clean --install-deps-from=flathub --repo=repo build-dir org.ghostty.Ghostty.yml

      - name: Create single-file Flatpak bundle
        run: |
          flatpak build-bundle repo "ghostty_${{ env.VERSION }}_gnome${{ env.GNOME_RUNTIME }}_x86_64.flatpak" org.ghostty.Ghostty ${{ env.GNOME_RUNTIME }}
          ls -lh "ghostty_${{ env.VERSION }}_gnome${{ env.GNOME_RUNTIME }}_x86_64.flatpak"

      - name: Upload Flatpak artifact (22.04)
        uses: actions/upload-artifact@v4
        with:
          name: ghostty-flatpak-ubuntu-22.04
          path: ghostty_${{ env.VERSION }}_gnome${{ env.GNOME_RUNTIME }}_x86_64.flatpak

  create-release:
    needs: [check-tags, build-ubuntu-24-04, build-ubuntu-22-04-flatpak]
    if: needs.check-tags.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare files for release
        run: |
          mkdir -p release
          find artifacts -type f -name "*.deb" -exec cp {} release/ \;
          find artifacts -type f -name "*.tar.gz" -exec cp {} release/ \;
          find artifacts -type f -name "*.flatpak" -exec cp {} release/ \;
          echo "Prepared artifacts:"
          ls -la release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.check-tags.outputs.tag }}
          files: release/*
          draft: false
          prerelease: false
          generate_release_notes: true
